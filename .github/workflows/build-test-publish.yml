name: Build, Test (and Publish) Builders

on:
  workflow_dispatch:
  push:

jobs:

  create-builders:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        builder: ["buildpacks-18", "buildpacks-20", "builder-classic-22", "builder-22"]
    steps:
      - uses: actions/checkout@v3
      - uses: buildpacks/github-actions/setup-pack@v4.8.1
        with:
          pack-version: 0.27.0
      - run: pack builder create ${{ matrix.builder }} --config ${{ matrix.builder }}/builder.toml --pull-policy always
      - run: docker save ${{ matrix.builder }} | zstd > ${{ matrix.builder }}.tar.zst
      - name: Persist builder image
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.builder }}
          path: ${{ matrix.builder }}.tar.zst

  test-getting-started-guides:
    runs-on: ubuntu-22.04
    needs: create-builders
    strategy:
      matrix:
        builder: ["buildpacks-18", "buildpacks-20", "builder-classic-22"]
        language: ["go", "gradle", "java", "node-js", "php", "python", "ruby", "scala", "typescript"]
        include:
          - builder: builder-classic-22
            language: clojure
          - builder: builder-22
            language: java
          - builder: builder-22
            language: node-js
          - builder: builder-22
            language: typescript
    steps:
      - uses: actions/checkout@v3
        with:
          ref: main
          repository: heroku/${{ matrix.language }}-getting-started.git
      - uses: buildpacks/github-actions/setup-pack@v4.8.1
        with:
          pack-version: 0.27.0
      - name: Restore builder image from archive
        uses: actions/download-artifact@v3
        with:
          name: ${{ matrix.builder }}
          path: ${{ matrix.builder }}.tar.zst
      - name: Load builder image into docker daemon
        run: zstd -dc ${{ matrix.builder }}.tar.zst | docker load
      - name: Add builder to trusted builders list
        run: pack config trusted-builders add ${{ matrix.builder }}
      - name: Build getting started guide image
        run: pack build getting-started --builder ${{ matrix.builder }} --pull-policy never
      - name: Start getting started guide image
        run: docker run --name getting-started --detach -p 8080:8080 --env PORT=8080 getting-started
      - name: Test getting started web server response
        run: |
          if curl -sSf --retry 10 --retry-delay 1 --retry-all-errors --connect-timeout 3 http://localhost:8080 -o response.txt; then
            echo "Successful response from server"
          else
            echo "Server did not respond successfully"
            docker logs getting-started
            [[ -f response.txt ]] && cat response.txt
            exit 1
          fi

  test-example-functions:
    runs-on: ubuntu-22.04
    needs: create-builders
    strategy:
      matrix:
        builder: ["buildpacks-18", "buildpacks-20", "builder-22"]
        example: ["java-function", "javascript-function", "typescript-function"]
    steps:
      - uses: actions/checkout@v3

  publish-builders:
    runs-on: ubuntu-22.04
    needs:
      - test-example-functions
      - test-getting-started-guides
    if: github.branch == 'main'
    strategy:
      matrix:
        include:
          - builder: buildpacks-18
            tag1: heroku/buildpacks:18
            tag2: $REGISTRY_HOST/s/heroku/cnb/heroku-18:builder
          - builder: buildpacks-20
            tag1: heroku/buildpacks:20
            tag2: $REGISTRY_HOST/s/heroku/cnb/heroku-20:builder
            tag3: heroku/buildpacks:latest
          - builder: builder-classic-22
            tag1: heroku/builder-classic:22
          - builder: builder-22
            tag1: heroku/builder:22
            tag2: $REGISTRY_HOST/s/heroku/cnb/heroku-22:builder
    steps:
      - uses: actions/checkout@v3
