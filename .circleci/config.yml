version: 2.0
aliases:
  test-lang: &test_lang
    - setup_remote_docker
    - restore_cache:
        key: v1-docker-cache-build-base-{{ .Environment.CIRCLE_SHA1 }}
    - restore_cache:
        key: v1-docker-cache-run-base-{{ .Environment.CIRCLE_SHA1 }}
    - restore_cache:
        key: v1-docker-cache-builder-{{ .Environment.CIRCLE_SHA1 }}
    - run: go get github.com/buildpack/pack/cmd/pack
    - run: mkdir -p ~/.docker
    - run: echo {} > ~/.docker/config.json
    - run: docker load < docker_cache_build_base/pack-18-build.tar
    - run: docker load < docker_cache_run_base/pack-18.tar
    - run: docker load < docker_cache_builder/buildpacks-18.tar
    - run: pack build pack-getting-started --path getting_started --builder heroku/buildpacks:18 --no-pull
jobs:
  clone:
    docker:
      - image: circleci/golang:1.12.5
    steps:
      - checkout
      - save-cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/project
  install-buildpacks:
    docker:
      - image: circleci/golang:1.12.5
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - run: ./buildpacks/install.sh
      - save-cache:
          key: v1-buildpacks-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/project/buildpacks
  docker-build-run-image:
    docker:
      - image: circleci/golang:1.12.5
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-buildpacks-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker
      - run: docker build -f Dockerfile.run -t heroku/pack:18 .
      - run: mkdir docker_cache_run_base
      - run: docker save heroku/pack:18 > docker_cache_run_base/pack-18.tar
      - save-cache:
          key: v1-docker-cache-run-base-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - docker_cache_run_base
  docker-build-build-image:
    docker:
      - image: circleci/golang:1.12.5
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-buildpacks-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker
      - run: docker build -f Dockerfile.build -t heroku/pack:18-build .
      - run: mkdir docker_cache_build_base
      - run: docker save heroku/pack:18-build > docker_cache_build_base/pack-18-build.tar
      - save-cache:
          key: v1-docker-cache-build-base-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - docker_cache_build_base
  create-builder-image:
    docker:
      - image: circleci/golang:1.12.5
    steps:
      - restore_cache:
          key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-buildpacks-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-docker-cache-build-base-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          key: v1-docker-cache-run-base-{{ .Environment.CIRCLE_SHA1 }}
      - setup_remote_docker
      - run: go get github.com/buildpack/pack/cmd/pack
      - run: mkdir -p ~/.docker
      - run: echo {} > ~/.docker/config.json
      - run: docker load < docker_cache_build_base/pack-18-build.tar
      - run: docker load < docker_cache_run_base/pack-18.tar
      - run: pack create-builder heroku/buildpacks:18 --builder-config builder.toml --no-pull
      - run: mkdir docker_cache_builder
      - run: docker save heroku/buildpacks:18 > docker_cache_builder/buildpacks-18.tar
      - save-cache:
          key: v1-docker-cache-builder-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - docker_cache_builder
  test-go:
    docker:
      - image: circleci/golang:1.12.5
    steps:
      - run: git clone https://github.com/heroku/go-getting-started.git getting_started
      - <: &test_lang
  test-nodejs:
    docker:
      - image: circleci/golang:1.12.5
    steps:
      - run: git clone https://github.com/heroku/node-js-getting-started.git getting_started
      - <: &test_lang
workflows:
  version: 2
  test-languages:
    jobs:
      - clone
      - install-buildpacks:
          requires:
            - clone
      - docker-build-run-image:
          requires:
            - clone
      - docker-build-build-image:
          requires:
            - clone
      - create-builder-image:
          requires:
            - install-buildpacks
            - docker-build-run-image
            - docker-build-build-image
      - test-go:
          requires:
            - create-builder-image
      - test-nodejs:
          requires:
            - create-builder-image
