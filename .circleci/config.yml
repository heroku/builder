version: 2.1
orbs:
    pack: buildpacks/pack@0.2.4

jobs:
  create-builder:
    parameters:
      builder-dir:
        description: "Builder directory"
        type: string
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - pack/install-pack:
          version: 0.27.0
      - attach_workspace:
          at: /tmp/workspace
      - run: pack builder create << parameters.builder-dir >> --config << parameters.builder-dir >>/builder.toml --pull-policy always
      - run: docker save << parameters.builder-dir >> | zstd > /tmp/workspace/<< parameters.builder-dir >>.tar.zst
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - << parameters.builder-dir >>.tar.zst
  test-getting-started-guide:
    parameters:
      language:
        description: "Language"
        type: string
      stack-tag:
        description: "The tag of the run stack (ex. '20' for heroku/heroku:20)"
        type: string
      builder-dir:
        description: "Builder directory"
        type: string
    machine:
      image: ubuntu-2204:current
    steps:
      - run: git clone https://github.com/heroku/<< parameters.language >>-getting-started.git getting-started
      - pack/install-pack:
          version: 0.27.0
      - attach_workspace:
          at: /tmp/workspace
      - run: docker pull heroku/heroku:<< parameters.stack-tag>>-cnb
      - run: zstd -dc /tmp/workspace/<< parameters.builder-dir >>.tar.zst | docker load
      - run: pack config trusted-builders add << parameters.builder-dir >>
      - run: pack build getting-started --path getting-started --builder << parameters.builder-dir >> --pull-policy never
      - run: docker run --name getting-started --detach -p 8080:8080 --env PORT=8080 getting-started
      - run:
          name: Test web server response
          command: |
            if curl -sSf --retry 5 --retry-delay 1 --retry-all-errors --connect-timeout 3 http://localhost:8080 -o response.txt; then
              echo "Successful response from server"
            else
              echo "Server did not respond successfully"
              docker logs getting-started
              [[ -f response.txt ]] && cat response.txt
              exit 1
            fi
  test-example-function:
    parameters:
      example:
        description: "The path to the directory containing the function"
        type: string
      stack-tag:
        description: "The tag of the run stack (ex. '20' for heroku/heroku:20)"
        type: string
      builder-dir:
        description: "Builder directory"
        type: string
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - pack/install-pack:
          version: 0.27.0
      - attach_workspace:
          at: /tmp/workspace
      - run: docker pull heroku/heroku:<< parameters.stack-tag>>-cnb
      - run: zstd -dc /tmp/workspace/<< parameters.builder-dir >>.tar.zst | docker load
      - run: pack config trusted-builders add << parameters.builder-dir >>
      - run: pack build example-function --path examples/<< parameters.example >> --builder << parameters.builder-dir >> --pull-policy never
      - run: docker run --name example-function --detach -p 8080:8080 --env PORT=8080 example-function
      - run:
          name: Test function response
          command: |
            if curl -sSf --retry 5 --retry-delay 1 --retry-all-errors --connect-timeout 3 -X POST -H 'x-health-check: true' http://localhost:8080 -o response.txt; then
              echo "Successful response from function"
            else
              echo "Function did not respond successfully"
              docker logs example-function
              [[ -f response.txt ]] && cat response.txt
              exit 1
            fi
  publish-builder:
    parameters:
      builder-dir:
        description: "Builder directory"
        type: string
      image_tag:
        description: "Name of the dockerhub image to publish"
        type: string
      image_tag_alias:
        description: "Name of dockerhub image alias to publish"
        type: string
        default: ""
      image_tag_alias2:
        description: "Name of dockerhub image alias to publish"
        type: string
        default: ""
    machine:
      image: ubuntu-2204:current
    steps:
      - run: docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_TOKEN
      - run:
          name: Log into additional registry
          command: |
            REGISTRY_TOKEN=$(curl -f -X POST $SERVICE_TOKEN_ENDPOINT -d "{\"username\":\"$SERVICE_TOKEN_USER_NAME\", \"password\":\"$SERVICE_TOKEN_PASSWORD\"}" -s --retry 3 | jq -r ".raw_id_token")
            echo "$REGISTRY_TOKEN" | docker login $REGISTRY_HOST -u "$REGISTRY_USER" --password-stdin
      - attach_workspace:
          at: /tmp/workspace
      - run: zstd -dc /tmp/workspace/<< parameters.builder-dir >>.tar.zst | docker load
      - run: docker tag << parameters.builder-dir >> << parameters.image_tag >>
      - run: docker push << parameters.image_tag >>
      - when:
          condition: << parameters.image_tag_alias >>
          steps:
            - run: docker tag << parameters.image_tag >> << parameters.image_tag_alias >>
            - run: docker push << parameters.image_tag_alias >>
      - when:
          condition: << parameters.image_tag_alias2 >>
          steps:
            - run: docker tag << parameters.image_tag >> << parameters.image_tag_alias2 >>
            - run: docker push << parameters.image_tag_alias2 >>

workflows:
  version: 2
  build-test-publish:
    jobs: &build-test-publish-jobs
      - create-builder:
          name: create-<< matrix.builder-dir >>
          matrix:
            parameters:
              builder-dir: ["buildpacks-18", "buildpacks-20", "builder-classic-22", "builder-22"]
      - test-getting-started-guide:
          name: test-<< matrix.language >>-18
          builder-dir: buildpacks-18
          stack-tag: "18"
          matrix:
            alias: test-getting-started-guides-18
            parameters:
              language: ["go", "gradle", "java", "node-js", "php", "python", "ruby", "scala", "typescript"]
          requires:
            - create-buildpacks-18
      - test-getting-started-guide:
          name: test-<< matrix.language >>-20
          builder-dir: buildpacks-20
          stack-tag: "20"
          matrix:
            alias: test-getting-started-guides-20
            parameters:
              language: ["go", "gradle", "java", "node-js", "php", "python", "ruby", "scala", "typescript"]
          requires:
            - create-buildpacks-20
      - test-getting-started-guide:
          name: test-<< matrix.language >>-classic-22
          builder-dir: builder-classic-22
          stack-tag: "22"
          matrix:
            alias: test-getting-started-guides-classic-22
            parameters:
              language: ["clojure", "go", "gradle", "java", "node-js", "php", "python", "ruby", "scala", "typescript"]
          requires:
            - create-builder-classic-22
      - test-getting-started-guide:
          name: test-<< matrix.language >>-22
          builder-dir: builder-22
          stack-tag: "22"
          matrix:
            alias: test-getting-started-guides-22
            parameters:
              language: ["java", "node-js", "typescript"]
          requires:
            - create-builder-22
      - test-example-function:
          name: test-<< matrix.example >>-18
          builder-dir: buildpacks-18
          stack-tag: "18"
          matrix:
            alias: test-example-functions-18
            parameters:
              example: ["java-function", "javascript-function", "typescript-function"]
          requires:
            - create-buildpacks-18
      - test-example-function:
          name: test-<< matrix.example >>-20
          builder-dir: buildpacks-20
          stack-tag: "20"
          matrix:
            alias: test-example-functions-20
            parameters:
              example: ["java-function", "javascript-function", "typescript-function"]
          requires:
            - create-buildpacks-20
      - test-example-function:
          name: test-<< matrix.example >>-22
          builder-dir: builder-22
          stack-tag: "22"
          matrix:
            alias: test-example-functions-22
            parameters:
              example: ["java-function", "javascript-function", "typescript-function"]
          requires:
            - create-builder-22
      - publish-builder:
          name: publish-buildpacks-18
          builder-dir: buildpacks-18
          image_tag: heroku/buildpacks:18
          image_tag_alias: $REGISTRY_HOST/s/heroku/cnb/heroku-18:builder
          requires:
            - test-example-functions-18
            - test-getting-started-guides-18
          filters:
            branches:
              only: main
      - publish-builder:
          name: publish-buildpacks-20
          builder-dir: buildpacks-20
          image_tag: heroku/buildpacks:20
          image_tag_alias: $REGISTRY_HOST/s/heroku/cnb/heroku-20:builder
          image_tag_alias2: heroku/buildpacks:latest
          requires:
            - test-example-functions-20
            - test-getting-started-guides-20
          filters:
            branches:
              only: main
      - publish-builder:
          name: publish-builder-classic-22
          builder-dir: builder-classic-22
          image_tag: heroku/builder-classic:22
          requires:
            - test-getting-started-guides-classic-22
          filters:
            branches:
              only: main
      - publish-builder:
          name: publish-builder-22
          builder-dir: builder-22
          image_tag: heroku/builder:22
          image_tag_alias: $REGISTRY_HOST/s/heroku/cnb/heroku-22:builder
          requires:
            - test-example-functions-22
            - test-getting-started-guides-22
          filters:
            branches:
              only: main
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: main
    jobs: *build-test-publish-jobs
